/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPriceChangeEmitter,
  IPriceChangeEmitterInterface,
} from "../IPriceChangeEmitter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PriceEpochFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "votingRoundId",
        type: "uint32",
      },
    ],
    name: "PricesPublished",
    type: "event",
  },
] as const;

export class IPriceChangeEmitter__factory {
  static readonly abi = _abi;
  static createInterface(): IPriceChangeEmitterInterface {
    return new Interface(_abi) as IPriceChangeEmitterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPriceChangeEmitter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IPriceChangeEmitter;
  }
}
