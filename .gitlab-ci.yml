include:
  - component: git.matheo.si/pub/gitlab-ci-templates/secret-detection@~latest
  - component: git.matheo.si/pub/gitlab-ci-templates/env-helper@~latest
  - component: git.matheo.si/pub/gitlab-ci-templates/ssh-helper@~latest
  - component: git.matheo.si/pub/gitlab-ci-templates/docker-compose@~latest

stages:
  - security
  - build
  - deploy

.build-docker-template: &build-docker-template
  stage: build
  image: cr.matheo.si/pub/alpine-runner:latest
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  tags:
    - dind

build_production:
  <<: *build-docker-template
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy_production:
  image: cr.matheo.si/pub/alpine-runner:latest
  stage: deploy
  environment: Production
  variables:
    DEPLOY_IMAGE_TAG: $CI_COMMIT_BRANCH
    DEPLOY_DIR: "fasset-indexer-v1"
  before_script:
    - !reference [.env_helper, load]
    - !reference [.ssh_helper, load]
  script:
    - ssh_run "mkdir -p ~/${DEPLOY_DIR}"
    - deploy_env "${CI_SSH_USER}@${CI_SSH_HOST}:${DEPLOY_DIR}/.env" env.template
    - deploy_env "${CI_SSH_USER}@${CI_SSH_HOST}:${DEPLOY_DIR}/.env.api" packages/fasset-indexer-api/.env.template
    - deploy_env "${CI_SSH_USER}@${CI_SSH_HOST}:${DEPLOY_DIR}/.env.core" packages/fasset-indexer-core/.env.template packages/fasset-indexer-core/.env.production
    - scp compose.yaml "${CI_SSH_USER}@${CI_SSH_HOST}:${DEPLOY_DIR}/"
    - !reference [.docker-compose, deploy_with_ci_token]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH