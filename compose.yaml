services:
  api:
    image: ${CI_REGISTRY_IMAGE}:${DEPLOY_IMAGE_TAG}
    container_name: ${COMPOSE_PROJECT_NAME}-api
    command: ["node", "/app/packages/fasset-indexer-api/dist/src/main"]
    environment:
      DB_TYPE: postgres
      DB_NAME: ${POSTGRES_DB}
      DB_HOST: db
      DB_PORT: ${POSTGRES_PORT:-5432}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    ports:
      - "${LISTEN_PORT}:3000"
    depends_on:
      - db
    env_file: .env.api
  core: &core-svc
    image: ${CI_REGISTRY_IMAGE}:${DEPLOY_IMAGE_TAG}
    container_name: ${COMPOSE_PROJECT_NAME}-core
    command: ["node", "/app/packages/fasset-indexer-core/dist/src/run/run-indexer.js"]
    environment:
      DB_TYPE: postgres
      DB_NAME: ${POSTGRES_DB}
      DB_HOST: db
      DB_PORT: ${POSTGRES_PORT:-5432}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    depends_on:
      - db
    env_file: .env.core
  watchdog:
    <<: *core-svc
    container_name: ${COMPOSE_PROJECT_NAME}-watchdog
    command: ["node", "/app/packages/fasset-indexer-core/dist/src/run/run-watchdog.js"]
  db:
    image: postgres:16
    container_name: ${COMPOSE_PROJECT_NAME}-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${LISTEN_PORT_DB:-127.0.0.1:5432}:5432"
    volumes:
      - 'db_data:/var/lib/postgresql/data'

volumes:
  db_data: